---
import type { GetStaticPaths, MarkdownInstance } from "astro";

import BaseLayout from "../../layouts/base-layout.astro";
import BlogPost from "../../components/blog-post.astro";

interface Post {
    title: string;
    pubDate: string;
    description: string;
    author: string;
    image: { url: string; alt: string };
    tags: string[];
}

export const getStaticPaths = (async () => {
    const allPosts: MarkdownInstance<Post>[] = await Astro.glob("../posts/*.md");
    const uniqueTags: string[] = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())];

    return uniqueTags.map((tag) => {
        const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));

        return {
            params: { tag },
            props: { posts: filteredPosts },
        };
    });
}) satisfies GetStaticPaths;

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<BaseLayout pageTitle={tag}>
    <p>Posts tagged with {tag}</p>

    <ul>
        {posts.map((post) => <BlogPost {post} />)}
    </ul>
</BaseLayout>
